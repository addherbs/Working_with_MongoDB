How to query in MongoDB:
db.testdb.drop()

db.createCollection('users');


Drop the collection with db.testdb.drop() and Insert
db.testdb.insert([{"name" : "Dale Cooper", "street" : "123 Main St", "city" : "Yakima", "state" : "WA", "dob" : new Date(1959, 2, 22), "sex" : "M", "gpa" : 3.5, "status" : "student", "tests" : [10, 9, 8], "contact info" : {"email" : "dc@aol.com", "phone" : "792-223-8901"}},
{"name" : "Harry Truman", "street" : "202 South St", "city" : "Vancouver", "state" : "WA", "dob" : new Date(1946, 1, 24), "sex" : "M", "gpa" : 3.4, "status" : "student", "tests" : [8, 9, 8], "contact info" : {"email" : "ht@aol.com", "phone" : "792-223-9810"}},
{"name" : "Shelly Johnson", "street" : "9 Pond Rd", "city" : "Sparks", "state" : "NV", "dob" : new Date(1970, 12, 12), "sex" : "F", "gpa" : 2.9, "status" : "dropout", "tests" : [10, 8, 0], "contact info" : {"email" : "sj@aol.com", "phone" : "792-223-6734"}},
{"name" : "Bobby Briggs", "street" : "14 12th St", "city" : "San Diego", "state" : "CA", "dob" : new Date(1967, 5, 24), "sex" : "M", "gpa" : 2.0, "status" : "student", "tests" : [5, 4, 6], "contact info" : {"email" : "bb@aol.com", "phone" : "792-223-6178"}},
{"name" : "Donna Hayward", "street" : "120 16th St", "city" : "Davenport", "state" : "IA", "dob" : new Date(1970, 3, 24), "sex" : "F", "gpa" : 3.7, "status" : "student", "tests" : [10, 8, 8], "contact info" : {"email" : "dh@aol.com", "phone" : "792-223-2001"}},
{"name" : "Audrey Horne", "street" : "342 19th St", "city" : "Detroit", "state" : "MI", "dob" : new Date(1965, 2, 1), "sex" : "F", "gpa" : 3.0, "status" : "student", "tests" : [9, 9, 8], "contact info" : {"email" : "ah@aol.com", "phone" : "792-223-2002"}},
{"name" : "James Hurley", "street" : "2578 Cliff St", "city" : "Queens", "state" : "NY", "dob" : new Date(1967, 1, 2), "sex" : "M", "gpa" : 2.9, "status" : "dropout", "tests" : [8, 9, 0], "contact info" : {"email" : "jh@aol.com", "phone" : "792-223-1890"}},
{"name" : "Lucy Moran", "street" : "178 Dover St", "city" : "Hollywood", "state" : "CA", "dob" : new Date(1954, 11, 27), "sex" : "F", "gpa" : 3.0, "status" : "student", "tests" : [9, 9, 8], "contact info" : {"email" : "lm@aol.com", "phone" : "792-223-9678"}},
{"name" : "Tommy Hill", "street" : "672 High Plains", "city" : "Tucson", "state" : "AZ", "dob" : new Date(1951, 12, 21), "sex" : "M", "gpa" : 3.7, "status" : "student", "tests" : [10, 9, 9], "contact info" : {"email" : "th@aol.com", "phone" : "792-223-1115"}},
{"name" : "Andy Brennan", "street" : "281 4th St", "city" : "Jacksonville", "state" : "NC", "dob" : new Date(1960, 12, 27), "sex" : "M", "gpa" : 2.5, "status" : "student", "tests" : [7, 9, 8], "contact info" : {"email" : "ab@aol.com", "phone" : "792-223-8902"}},
])

How to find certain specifications:

--> db.testdb.find({"state": "WA", "sex": "M"}).pretty() --> gives all information

--> db.testdb.find({"state": "WA", "sex": "M"}, {
"name": 1,
"dob": 1,
}).pretty()             ----> This will give only the ones which has 1 associated with it in attributes


--> db.testdb.find({"state": "WA", "sex": "M"}, { "name": 1, "dob": 1, "_id":0 }).pretty() ----> No ID



How to find range "greater than equal" and "less than equal":
--> db.testdb.find({"gpa": { "$gte": 3.0, "$lte": 3.5}},
          {"name":1 , "gpa":1, "_id":0})    --> gives between gpa range and only name and gpa

how to find not equal a case situation:
--> db.testdb.find({"sex":{"$ne":"M"}, "status":"student"}, {"name" :1 , "sex":1 , "_id":0})


How to find in any of these "equal to one of these" in array:
---> db.testdb.find({"gpa": {"$in": [3.5,3.7]}},
      {"name":1 , "gpa": 1, "_id":0})

HOw to find not in array:
-->  db.testdb.find({"gpa": {"$nin": [3.5,3.7]}},{"name":1 , "gpa": 1, "_id":0})

how to find OR situations:
--> db.testdb.find({"$or":
[{"status":"dropout"},
{"gpa":{"$lt": 3.0}} ]},
{"name":1, "_id":0 }).pretty()
